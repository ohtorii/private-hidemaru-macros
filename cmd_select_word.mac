/*領域を少しずつ選択する秀丸マクロ。

【導入方法】
・mobitan氏 cmdSelectBetween.mac をインストールします。
・cmdSelectBetween.macを以下手順で改変して下さい。

【改変方法】
	8行目	(before)	#Notify = yes
			(after)		#Notify = no

	310行目	(before)	if (!#debug) enabledraw;
			(after)		//if (!#debug) enabledraw;

	336行目	(before)	enabledraw
			(after)		//enabledraw

	342行目	(before)	enabledraw
			(after)		//enabledraw

	エラー通知を行わないようにしたことと、描画を再開しないようにしました。

【動作環境】
・mobitan氏	cmdSelectBetween.mac	Version 1.0  (2011/09/29)
・秀丸エディタv8以降なら動くと思います。

*/


//////////////////////////////////////////////////////////////////////////////
//定義
//////////////////////////////////////////////////////////////////////////////
#index_char_len=4;
#index_not_found=-1;
#g_range[0]=0;
$g_range_name[0]="";
#g_range_index=0;
#g_enable_debug=false;
$g_path_cmdSelectBetween=macrodir + "\\cmdSelectBetween.mac";

//////////////////////////////////////////////////////////////////////////////
//メイン処理
//////////////////////////////////////////////////////////////////////////////
if(#g_enable_debug){
	debuginfo 1;
}else{
	debuginfo 0;
}
disabledraw;
call BuildColorMaskVariable;
call BuildSelectcFoldableTable;
call Main;
//enabledraw;
endmacro;

Main:
	if(selecting){
		##old_seltopx = seltopx;
		##old_seltopy = seltopy;
		##old_selendx = selendx;
		##old_selendy = selendy;
	}else{
		##old_seltopx = x;
		##old_seltopy = y;
		##old_selendx = x;
		##old_selendy = y;
	}

/*		call DoBracket;
	##ret = ##return;
	if(##ret){
		return ;
	}
*/
	if(selecting){
		##current_selection_len=charcount(0x80000000);
	}else{
		##current_selection_len=0;
	}
	debuginfo "##current_selection_len="+str(##current_selection_len);
	/*
	幾つかの方法で選択処理を行い、選択文字数が少ない方法を採用する。
	*/
	#g_range_index=0;
	
	//////////////////////////////////////////////////////////////////////////////
	//単語選択
	//////////////////////////////////////////////////////////////////////////////
	call SelectRange ##old_seltopx, ##old_seltopy, ##old_selendx,##old_selendy;
	if(selecting){
		#g_range[#g_range_index][#index_char_len]=-1;
	}else{
		selectword;
		#g_range[#g_range_index][#index_char_len]=charcount(0x80000000);
	}
	#g_range[#g_range_index][0]=seltopx;
	#g_range[#g_range_index][1]=seltopy;
	#g_range[#g_range_index][2]=selendx;
	#g_range[#g_range_index][3]=selendy;
	$g_range_name[#g_range_index]="selectword";
	#g_range_index=#g_range_index+1;

	//////////////////////////////////////////////////////////////////////////////
	//カラーで選択
	//////////////////////////////////////////////////////////////////////////////
	{
		##index=0;
		while(##index < #g_color_mask_count){
			moveto ##old_seltopx, ##old_seltopy;
			#color0=(colorcode&0x1F) == #g_color_mask[##index];
			moveto ##old_selendx, ##old_selendy;
			#color1=(colorcode&0x1F) == #g_color_mask[##index];
			if(#color0||#color1){
				call SelectRange ##old_seltopx, ##old_seltopy, ##old_selendx,##old_selendy;
				call SelectSameColor2 #g_color_mask[##index];
				#g_range[#g_range_index][0]=seltopx;
				#g_range[#g_range_index][1]=seltopy;
				#g_range[#g_range_index][2]=selendx;
				#g_range[#g_range_index][3]=selendy;
				#g_range[#g_range_index][#index_char_len]=charcount(0x80000000);
				$g_range_name[#g_range_index]=$g_color_mask_name[##index];
				#g_range_index=#g_range_index+1;
			}
			##index = ##index + 1;
		}
	}

	//////////////////////////////////////////////////////////////////////////////
	//行の選択
	//////////////////////////////////////////////////////////////////////////////
	selectline 1;
	#g_range[#g_range_index][0]=seltopx;
	#g_range[#g_range_index][1]=seltopy;
	#g_range[#g_range_index][2]=selendx;
	#g_range[#g_range_index][3]=selendy;
	#g_range[#g_range_index][#index_char_len]=charcount(0x80000000);
	$g_range_name[#g_range_index]="selectline";
	#g_range_index=#g_range_index+1;

	//////////////////////////////////////////////////////////////////////////////
	//cmdSelectBetween.mac
	//////////////////////////////////////////////////////////////////////////////
	if(existfile($g_path_cmdSelectBetween)){
		call SelectRange ##old_seltopx, ##old_seltopy, ##old_selendx,##old_selendy;
		execmacro $g_path_cmdSelectBetween;
		#g_range[#g_range_index][0]=seltopx;
		#g_range[#g_range_index][1]=seltopy;
		#g_range[#g_range_index][2]=selendx;
		#g_range[#g_range_index][3]=selendy;
		#g_range[#g_range_index][#index_char_len]=charcount(0x80000000);
		$g_range_name[#g_range_index]="cmdSelectBetween.mac";
		#g_range_index=#g_range_index+1;
	}

	//////////////////////////////////////////////////////////////////////////////
	//selectcfoldable
	//////////////////////////////////////////////////////////////////////////////
	call SelectcFoldableProc ##old_seltopx, ##old_seltopy, ##old_selendx,##old_selendy;

	//////////////////////////////////////////////////////////////////////////////
	//selectcfunc
	//////////////////////////////////////////////////////////////////////////////
	call SelectRange ##old_seltopx, ##old_seltopy, ##old_selendx,##old_selendy;
	selectcfunc;
	#g_range[#g_range_index][0]=seltopx;
	#g_range[#g_range_index][1]=seltopy;
	#g_range[#g_range_index][2]=selendx;
	#g_range[#g_range_index][3]=selendy;
	#g_range[#g_range_index][#index_char_len]=charcount(0x80000000);
	$g_range_name[#g_range_index]="selectfunc";
	#g_range_index=#g_range_index+1;

	call DebugPrintSelectionInfo #g_range_index;

	call FindMinSelectionIndex #g_range_index,##current_selection_len;
	##min_index=##return;
	if(##min_index==#index_not_found){
		call SelectRange ##old_seltopx,##old_seltopy,##old_selendx,##old_selendy;
		return;
	}
	debuginfo $g_range_name[##min_index];
	call SelectRange #g_range[##min_index][0], #g_range[##min_index][1], #g_range[##min_index][2], #g_range[##min_index][3];

	return ;

SelectcFoldableProc:
	##i = 0;
	while(##i < #g_foldable_flag_num){
		call SelectRange ##old_seltopx, ##old_seltopy, ##old_selendx,##old_selendy;
		selectfoldable #g_foldable_flag[##i];
		#g_range[#g_range_index][0]=seltopx;
		#g_range[#g_range_index][1]=seltopy;
		#g_range[#g_range_index][2]=selendx;
		#g_range[#g_range_index][3]=selendy;
		#g_range[#g_range_index][#index_char_len]=charcount(0x80000000);
		$g_range_name[#g_range_index]=$g_foldable_flag_name[##i];

		##i = ##i + 1;
	}
	return;

DoBracket:
	/*
	括弧が選択されていれば
		foo(){
			hoge;
		}

	これは、うまく動作しない。
		foo()
		{
			hoge;
		}
	これは、OK
		foo(
		){
			hoge;
		}
	*/
	##old_seltopx = seltopx;
	##old_seltopy = seltopy;
	##old_selendx = selendx;
	##old_selendy = selendy;
	$$c1 = gettext(seltopx, seltopy, seltopx+1, seltopy, 1);
	if($$c1 != "{"){
		return 0;
	}
	$$c2 = gettext(selendx, selendy, selendx-1, selendy, 1);
	if($$c2 != "}"){
		return 0;
	}
	call FindPrevBracket seltopx, seltopy;
	##new_pos_y = ##return;
	if(-1 == ##new_pos_y){
		return 0;
	}

	escape;
	moveto 0, ##new_pos_y;
	beginsel;
	moveto ##old_selendx, ##old_selendy;
	endsel;
	return 1;

FindPrevBracket:
	##old_seltopx = seltopx;
	##old_seltopy = seltopy;
	##old_selendx = selendx;
	##old_selendy = selendy;
	##pos_x = ##1;
	##pos_y = ##2;
	while(0 <= ##pos_x){
		left;
		if(unicode == 0x29){
			//')' を見つけた
			disablebreak;
			gokakko;
			if(result){
				return y;
			}
		}
		##pos_x = ##pos_x - 1;
	}

	escape;
	moveto 0, ##old_seltopy;
	beginsel;
	moveto ##old_selendx, ##old_selendy;
	endsel;

	return -1;

CorrectCursoPosition:
	if(selecting){
		##old_seltopx = seltopx;
		##old_seltopy = seltopy;
		##old_selendx = selendx;
		##old_selendy = selendy;
	}else{
		##old_seltopx = x;
		##old_seltopy = y;
		##old_selendx = x;
		##old_selendy = y;
	}
	moveto ##old_seltopx,##old_seltopy;
	return;

SelectSameColor2:
	if(selecting){
		##old_seltopx = seltopx;
		##old_seltopy = seltopy;
		##old_selendx = selendx;
		##old_selendy = selendy;
	}else{
		##old_seltopx = x;
		##old_seltopy = y;
		##old_selendx = x;
		##old_selendy = y;
	}
	##color_mask=##1;
	escape;

	/*カーソルの左側を調査
	*/
	moveto ##old_seltopx,##old_seltopy;
	while(1){
		if(( (colorcode&0x1F)   !=##color_mask) &&
			((colorcode[1]&0x1F)!=##color_mask) &&
			((colorcode[2]&0x1F)!=##color_mask))
		{
			break;
		}
		##sel_topx=x;
		##sel_topy=y;
		left;
		if(result==0){
			break;
		}
	}


	/*カーソルの右側を調査
	*/
	moveto ##old_selendx,##old_selendy;
	while(1){
		##sel_endx=x;
		##sel_endy=y;
		if(( (colorcode&0x1F)   !=##color_mask) &&
			((colorcode[1]&0x1F)!=##color_mask) &&
			((colorcode[2]&0x1F)!=##color_mask))
		{
			break;
		}
		right;
		if(result==0){
			break;
		}
	}
	call SelectRange ##sel_topx,##sel_topy,##sel_endx,##sel_endy;
	return;


IsSpace:
	return (unicode<=0x20)||(unicode==0x3000);

SelectRange:
	escape;
	if((##1==##3) && (##2==##4)){
		moveto  ##1, ##2;
	}else{
		moveto ##1, ##2;
		beginsel;
		moveto ##3, ##4;
		endsel;
	}
	return ;

FindMinSelectionIndex:
	##count=##1;
	##current_selection_len=##2;
	##min_index=#index_not_found;
	##min_value=1000000;//memo 適当に大きな数字
	##index=0;
	while(##index<##count){
		##select_len = #g_range[##index][#index_char_len];
		if(##current_selection_len < ##select_len){
			if(##select_len < ##min_value){
				##min_value=##select_len;
				##min_index=##index;
			}
		}
		##index = ##index + 1;
	}
	return ##min_index;

BuildSelectcFoldableTable:
	#g_foldable_flag_num=0;

	$g_foldable_flag_name[#g_foldable_flag_num]="連続したコメント";
	#g_foldable_flag[#g_foldable_flag_num]=0x0004;
	#g_foldable_flag_num = #g_foldable_flag_num + 1;

	$g_foldable_flag_name[#g_foldable_flag_num]="#ifdef等の対応";
	#g_foldable_flag[#g_foldable_flag_num]=0x0010;
	#g_foldable_flag_num = #g_foldable_flag_num + 1;

	$g_foldable_flag_name[#g_foldable_flag_num]="アウトライン解析との対応";
	#g_foldable_flag[#g_foldable_flag_num]=0x0020;
	#g_foldable_flag_num = #g_foldable_flag_num + 1;
	return ;

BuildColorMaskVariable:
	#g_color_mask_count=0;

	#g_color_mask[#g_color_mask_count]		=0x03;
	$g_color_mask_name[#g_color_mask_count]	="コメント";
	#g_color_mask_count = #g_color_mask_count + 1;

	#g_color_mask[#g_color_mask_count]		=0x04;
	$g_color_mask_name[#g_color_mask_count]	="強調１";
	#g_color_mask_count = #g_color_mask_count + 1;

	#g_color_mask[#g_color_mask_count]		=0x05;
	$g_color_mask_name[#g_color_mask_count]	="特に強調１";
	#g_color_mask_count = #g_color_mask_count + 1;

	#g_color_mask[#g_color_mask_count]		=0x06;
	$g_color_mask_name[#g_color_mask_count]	="行の強調";
	#g_color_mask_count = #g_color_mask_count + 1;

	#g_color_mask[#g_color_mask_count]		=0x07;
	$g_color_mask_name[#g_color_mask_count]	="強調２";
	#g_color_mask_count = #g_color_mask_count + 1;

	#g_color_mask[#g_color_mask_count]		=0x08;
	$g_color_mask_name[#g_color_mask_count]	="特に強調２";
	#g_color_mask_count = #g_color_mask_count + 1;

	#g_color_mask[#g_color_mask_count]		=0x09;
	$g_color_mask_name[#g_color_mask_count]	="行の強調２";
	#g_color_mask_count = #g_color_mask_count + 1;

	#g_color_mask[#g_color_mask_count]		=0x0B;
	$g_color_mask_name[#g_color_mask_count]	="URL部分";
	#g_color_mask_count = #g_color_mask_count + 1;

	#g_color_mask[#g_color_mask_count]		=0x0C;
	$g_color_mask_name[#g_color_mask_count]	="Email部分";
	#g_color_mask_count = #g_color_mask_count + 1;

	#g_color_mask[#g_color_mask_count]		=0x14;
	$g_color_mask_name[#g_color_mask_count]	="文字定数";
	#g_color_mask_count = #g_color_mask_count + 1;

	#g_color_mask[#g_color_mask_count]		=0x15;
	$g_color_mask_name[#g_color_mask_count]	="ファイル名部分";
	#g_color_mask_count = #g_color_mask_count + 1;

	#g_color_mask[#g_color_mask_count]		=0x16;
	$g_color_mask_name[#g_color_mask_count]	="強調３";
	#g_color_mask_count = #g_color_mask_count + 1;

	#g_color_mask[#g_color_mask_count]		=0x17;
	$g_color_mask_name[#g_color_mask_count]	="強調４";
	#g_color_mask_count = #g_color_mask_count + 1;

	#g_color_mask[#g_color_mask_count]		=0x1A;
	$g_color_mask_name[#g_color_mask_count]	="#ifdef等での無効部分";
	#g_color_mask_count = #g_color_mask_count + 1;

	return;

DebugPrintSelectionInfo:
	if(! #g_enable_debug){
		return;
	}
	##count=##1;
	##index=0;
	debuginfo("------------------------------------------");
	debuginfo("[index] 名前 選択文字数");
	debuginfo("------------------------------------------");
	while(##index<##count){
		$$len=str(#g_range[##index][#index_char_len]);
		$$name=$g_range_name[##index];
		$$index = str(##index);
		debuginfo("[" + $$index + "]" + $$name + "=" + $$len);
		##index = ##index + 1;
	}
	return ;
